// <auto-generated>
using System.Reflection;

namespace FxResources.System.Drawing.Common
{
    internal static class SR { }
}
namespace System
{
    internal static partial class SR
    {
        private static global::System.Resources.ResourceManager s_resourceManager;
        internal static global::System.Resources.ResourceManager ResourceManager => s_resourceManager ?? (s_resourceManager = new global::System.Resources.ResourceManager(typeof(FxResources.System.Drawing.Common.SR)));

        /// <summary>(printer name protected due to security restrictions)</summary>
        internal static string @CantTellPrinterName => GetResourceString("CantTellPrinterName", @"(printer name protected due to security restrictions)");
        /// <summary>Changes cannot be made to {0} because permissions are not valid.</summary>
        internal static string @CantChangeImmutableObjects => GetResourceString("CantChangeImmutableObjects", @"Changes cannot be made to {0} because permissions are not valid.");
        /// <summary>Bitmaps that are icons cannot be made transparent. Icons natively support transparency. Use the Icon constructor to create an icon.</summary>
        internal static string @CantMakeIconTransparent => GetResourceString("CantMakeIconTransparent", @"Bitmaps that are icons cannot be made transparent. Icons natively support transparency. Use the Icon constructor to create an icon.");
        /// <summary>The color {0} is not a system color.</summary>
        internal static string @ColorNotSystemColor => GetResourceString("ColorNotSystemColor", @"The color {0} is not a system color.");
        /// <summary>.NET Component</summary>
        internal static string @DotNET_ComponentType => GetResourceString("DotNET_ComponentType", @".NET Component");
        /// <summary>Function was ended.</summary>
        internal static string @GdiplusAborted => GetResourceString("GdiplusAborted", @"Function was ended.");
        /// <summary>File access is denied.</summary>
        internal static string @GdiplusAccessDenied => GetResourceString("GdiplusAccessDenied", @"File access is denied.");
        /// <summary>A Graphics object cannot be created from an image that has an indexed pixel format.</summary>
        internal static string @GdiplusCannotCreateGraphicsFromIndexedPixelFormat => GetResourceString("GdiplusCannotCreateGraphicsFromIndexedPixelFormat", @"A Graphics object cannot be created from an image that has an indexed pixel format.");
        /// <summary>SetPixel is not supported for images with indexed pixel formats.</summary>
        internal static string @GdiplusCannotSetPixelFromIndexedPixelFormat => GetResourceString("GdiplusCannotSetPixelFromIndexedPixelFormat", @"SetPixel is not supported for images with indexed pixel formats.");
        /// <summary>Destination points define a parallelogram which must have a length of 3. These points will represent the upper-left, upper-right, and lower-left coordinates (defined in that order).</summary>
        internal static string @GdiplusDestPointsInvalidParallelogram => GetResourceString("GdiplusDestPointsInvalidParallelogram", @"Destination points define a parallelogram which must have a length of 3. These points will represent the upper-left, upper-right, and lower-left coordinates (defined in that order).");
        /// <summary>Destination points must be an array with a length of 3 or 4. A length of 3 defines a parallelogram with the upper-left, upper-right, and lower-left corners. A length of 4 defines a quadrilateral with the fourth element of the array specifying the lower-rig ...</summary>
        internal static string @GdiplusDestPointsInvalidLength => GetResourceString("GdiplusDestPointsInvalidLength", @"Destination points must be an array with a length of 3 or 4. A length of 3 defines a parallelogram with the upper-left, upper-right, and lower-left corners. A length of 4 defines a quadrilateral with the fourth element of the array specifying the lower-right coordinate.");
        /// <summary>File not found.</summary>
        internal static string @GdiplusFileNotFound => GetResourceString("GdiplusFileNotFound", @"File not found.");
        /// <summary>Font '{0}' cannot be found.</summary>
        internal static string @GdiplusFontFamilyNotFound => GetResourceString("GdiplusFontFamilyNotFound", @"Font '{0}' cannot be found.");
        /// <summary>Font '{0}' does not support style '{1}'.</summary>
        internal static string @GdiplusFontStyleNotFound => GetResourceString("GdiplusFontStyleNotFound", @"Font '{0}' does not support style '{1}'.");
        /// <summary>A generic error occurred in GDI+.</summary>
        internal static string @GdiplusGenericError => GetResourceString("GdiplusGenericError", @"A generic error occurred in GDI+.");
        /// <summary>Buffer is too small (internal GDI+ error).</summary>
        internal static string @GdiplusInsufficientBuffer => GetResourceString("GdiplusInsufficientBuffer", @"Buffer is too small (internal GDI+ error).");
        /// <summary>Parameter is not valid.</summary>
        internal static string @GdiplusInvalidParameter => GetResourceString("GdiplusInvalidParameter", @"Parameter is not valid.");
        /// <summary>Rectangle '{0}' cannot have a width or height equal to 0.</summary>
        internal static string @GdiplusInvalidRectangle => GetResourceString("GdiplusInvalidRectangle", @"Rectangle '{0}' cannot have a width or height equal to 0.");
        /// <summary>Operation requires a transformation of the image from GDI+ to GDI. GDI does not support images with a width or height greater than 32767.</summary>
        internal static string @GdiplusInvalidSize => GetResourceString("GdiplusInvalidSize", @"Operation requires a transformation of the image from GDI+ to GDI. GDI does not support images with a width or height greater than 32767.");
        /// <summary>Out of memory.</summary>
        internal static string @GdiplusOutOfMemory => GetResourceString("GdiplusOutOfMemory", @"Out of memory.");
        /// <summary>Not implemented.</summary>
        internal static string @GdiplusNotImplemented => GetResourceString("GdiplusNotImplemented", @"Not implemented.");
        /// <summary>GDI+ is not properly initialized (internal GDI+ error).</summary>
        internal static string @GdiplusNotInitialized => GetResourceString("GdiplusNotInitialized", @"GDI+ is not properly initialized (internal GDI+ error).");
        /// <summary>Only TrueType fonts are supported. '{0}' is not a TrueType font.</summary>
        internal static string @GdiplusNotTrueTypeFont => GetResourceString("GdiplusNotTrueTypeFont", @"Only TrueType fonts are supported. '{0}' is not a TrueType font.");
        /// <summary>Only TrueType fonts are supported. This is not a TrueType font.</summary>
        internal static string @GdiplusNotTrueTypeFont_NoName => GetResourceString("GdiplusNotTrueTypeFont_NoName", @"Only TrueType fonts are supported. This is not a TrueType font.");
        /// <summary>Object is currently in use elsewhere.</summary>
        internal static string @GdiplusObjectBusy => GetResourceString("GdiplusObjectBusy", @"Object is currently in use elsewhere.");
        /// <summary>Overflow error.</summary>
        internal static string @GdiplusOverflow => GetResourceString("GdiplusOverflow", @"Overflow error.");
        /// <summary>Property cannot be found.</summary>
        internal static string @GdiplusPropertyNotFoundError => GetResourceString("GdiplusPropertyNotFoundError", @"Property cannot be found.");
        /// <summary>Property is not supported.</summary>
        internal static string @GdiplusPropertyNotSupportedError => GetResourceString("GdiplusPropertyNotSupportedError", @"Property is not supported.");
        /// <summary>Unknown GDI+ error occurred.</summary>
        internal static string @GdiplusUnknown => GetResourceString("GdiplusUnknown", @"Unknown GDI+ error occurred.");
        /// <summary>Image format is unknown.</summary>
        internal static string @GdiplusUnknownImageFormat => GetResourceString("GdiplusUnknownImageFormat", @"Image format is unknown.");
        /// <summary>Current version of GDI+ does not support this feature.</summary>
        internal static string @GdiplusUnsupportedGdiplusVersion => GetResourceString("GdiplusUnsupportedGdiplusVersion", @"Current version of GDI+ does not support this feature.");
        /// <summary>Bitmap region is already locked.</summary>
        internal static string @GdiplusWrongState => GetResourceString("GdiplusWrongState", @"Bitmap region is already locked.");
        /// <summary>(Global Assembly Cache)</summary>
        internal static string @GlobalAssemblyCache => GetResourceString("GlobalAssemblyCache", @"(Global Assembly Cache)");
        /// <summary>BufferedGraphicsContext cannot be disposed of because a buffer operation is currently in progress.</summary>
        internal static string @GraphicsBufferCurrentlyBusy => GetResourceString("GraphicsBufferCurrentlyBusy", @"BufferedGraphicsContext cannot be disposed of because a buffer operation is currently in progress.");
        /// <summary>Screen-compatible bitmap cannot be created. The screen bitmap format cannot be determined.</summary>
        internal static string @GraphicsBufferQueryFail => GetResourceString("GraphicsBufferQueryFail", @"Screen-compatible bitmap cannot be created. The screen bitmap format cannot be determined.");
        /// <summary>'{0}' data length expected {1}, read {2}</summary>
        internal static string @IconInvalidMaskLength => GetResourceString("IconInvalidMaskLength", @"'{0}' data length expected {1}, read {2}");
        /// <summary>Toolbox item cannot be modified.</summary>
        internal static string @ToolboxItemLocked => GetResourceString("ToolboxItemLocked", @"Toolbox item cannot be modified.");
        /// <summary>Property {0} requires an argument of type {1}.</summary>
        internal static string @ToolboxItemInvalidPropertyType => GetResourceString("ToolboxItemInvalidPropertyType", @"Property {0} requires an argument of type {1}.");
        /// <summary>Data type {0} is not serializable. Items added to a property dictionary must be serializable.</summary>
        internal static string @ToolboxItemValueNotSerializable => GetResourceString("ToolboxItemValueNotSerializable", @"Data type {0} is not serializable. Items added to a property dictionary must be serializable.");
        /// <summary>Argument should be a non-empty string.</summary>
        internal static string @ToolboxItemInvalidKey => GetResourceString("ToolboxItemInvalidKey", @"Argument should be a non-empty string.");
        /// <summary>Internal state of the {0} class is invalid.</summary>
        internal static string @IllegalState => GetResourceString("IllegalState", @"Internal state of the {0} class is invalid.");
        /// <summary>Property must be set to a valid ColorBlend object to use interpolation colors.</summary>
        internal static string @InterpolationColorsColorBlendNotSet => GetResourceString("InterpolationColorsColorBlendNotSet", @"Property must be set to a valid ColorBlend object to use interpolation colors.");
        /// <summary>{0}{1} ColorBlend objects must be constructed with the same number of positions and color values. Positions must be between 0.0 and 1.0, 1.0 indicating the last element in the array.</summary>
        internal static string @InterpolationColorsCommon => GetResourceString("InterpolationColorsCommon", @"{0}{1} ColorBlend objects must be constructed with the same number of positions and color values. Positions must be between 0.0 and 1.0, 1.0 indicating the last element in the array.");
        /// <summary>ColorBlend object that was set is not valid.</summary>
        internal static string @InterpolationColorsInvalidColorBlendObject => GetResourceString("InterpolationColorsInvalidColorBlendObject", @"ColorBlend object that was set is not valid.");
        /// <summary>Position's first element must be equal to 0.</summary>
        internal static string @InterpolationColorsInvalidStartPosition => GetResourceString("InterpolationColorsInvalidStartPosition", @"Position's first element must be equal to 0.");
        /// <summary>Position's last element must be equal to 1.0.</summary>
        internal static string @InterpolationColorsInvalidEndPosition => GetResourceString("InterpolationColorsInvalidEndPosition", @"Position's last element must be equal to 1.0.");
        /// <summary>Array of colors and positions must contain at least two elements.</summary>
        internal static string @InterpolationColorsLength => GetResourceString("InterpolationColorsLength", @"Array of colors and positions must contain at least two elements.");
        /// <summary>Colors and positions do not have the same number of elements.</summary>
        internal static string @InterpolationColorsLengthsDiffer => GetResourceString("InterpolationColorsLengthsDiffer", @"Colors and positions do not have the same number of elements.");
        /// <summary>Value of '{1}' is not valid for '{0}'.</summary>
        internal static string @InvalidArgumentValue => GetResourceString("InvalidArgumentValue", @"Value of '{1}' is not valid for '{0}'.");
        /// <summary>Value of '{0}' is not valid for font size unit.</summary>
        internal static string @InvalidArgumentValueFontConverter => GetResourceString("InvalidArgumentValueFontConverter", @"Value of '{0}' is not valid for font size unit.");
        /// <summary>Value of '{1}' is not valid for '{0}'. '{0}' should be greater than {2} and less than or equal to {3}.</summary>
        internal static string @InvalidBoundArgument => GetResourceString("InvalidBoundArgument", @"Value of '{1}' is not valid for '{0}'. '{0}' should be greater than {2} and less than or equal to {3}.");
        /// <summary>Class name is not valid.</summary>
        internal static string @InvalidClassName => GetResourceString("InvalidClassName", @"Class name is not valid.");
        /// <summary>Color '{0}' is not valid.</summary>
        internal static string @InvalidColor => GetResourceString("InvalidColor", @"Color '{0}' is not valid.");
        /// <summary>DashPattern value is not valid.</summary>
        internal static string @InvalidDashPattern => GetResourceString("InvalidDashPattern", @"DashPattern value is not valid.");
        /// <summary>Value of '{1}' is not valid for '{0}'. '{0}' should be greater than or equal to {2} and less than or equal to {3}.</summary>
        internal static string @InvalidEx2BoundArgument => GetResourceString("InvalidEx2BoundArgument", @"Value of '{1}' is not valid for '{0}'. '{0}' should be greater than or equal to {2} and less than or equal to {3}.");
        /// <summary>Win32 handle that was passed to {0} is not valid or is the wrong type.</summary>
        internal static string @InvalidGDIHandle => GetResourceString("InvalidGDIHandle", @"Win32 handle that was passed to {0} is not valid or is the wrong type.");
        /// <summary>Image type is unknown.</summary>
        internal static string @InvalidImage => GetResourceString("InvalidImage", @"Image type is unknown.");
        /// <summary>Value of '{1}' is not valid for '{0}'. '{0}' must be greater than or equal to {2}.</summary>
        internal static string @InvalidLowBoundArgumentEx => GetResourceString("InvalidLowBoundArgumentEx", @"Value of '{1}' is not valid for '{0}'. '{0}' must be greater than or equal to {2}.");
        /// <summary>Permission level is not valid.</summary>
        internal static string @InvalidPermissionLevel => GetResourceString("InvalidPermissionLevel", @"Permission level is not valid.");
        /// <summary>Permission state is not valid.</summary>
        internal static string @InvalidPermissionState => GetResourceString("InvalidPermissionState", @"Permission state is not valid.");
        /// <summary>Argument '{0}' must be a picture that can be used as a {1}.</summary>
        internal static string @InvalidPictureType => GetResourceString("InvalidPictureType", @"Argument '{0}' must be a picture that can be used as a {1}.");
        /// <summary>Settings to access printer '{0}' are not valid.</summary>
        internal static string @InvalidPrinterException_InvalidPrinter => GetResourceString("InvalidPrinterException_InvalidPrinter", @"Settings to access printer '{0}' are not valid.");
        /// <summary>No printers are installed.</summary>
        internal static string @InvalidPrinterException_NoDefaultPrinter => GetResourceString("InvalidPrinterException_NoDefaultPrinter", @"No printers are installed.");
        /// <summary>Handle {0} is not valid.</summary>
        internal static string @InvalidPrinterHandle => GetResourceString("InvalidPrinterHandle", @"Handle {0} is not valid.");
        /// <summary>Parameter must be positive and &lt; Width.</summary>
        internal static string @ValidRangeX => GetResourceString("ValidRangeX", @"Parameter must be positive and < Width.");
        /// <summary>Parameter must be positive and &lt; Height.</summary>
        internal static string @ValidRangeY => GetResourceString("ValidRangeY", @"Parameter must be positive and < Height.");
        /// <summary>Native handle is 0.</summary>
        internal static string @NativeHandle0 => GetResourceString("NativeHandle0", @"Native handle is 0.");
        /// <summary>Default printer is not set.</summary>
        internal static string @NoDefaultPrinter => GetResourceString("NoDefaultPrinter", @"Default printer is not set.");
        /// <summary>Not implemented.</summary>
        internal static string @NotImplemented => GetResourceString("NotImplemented", @"Not implemented.");
        /// <summary>Occurs when the document is about to be printed.</summary>
        internal static string @PDOCbeginPrintDescr => GetResourceString("PDOCbeginPrintDescr", @"Occurs when the document is about to be printed.");
        /// <summary>The name of the document shown to the user.</summary>
        internal static string @PDOCdocumentNameDescr => GetResourceString("PDOCdocumentNameDescr", @"The name of the document shown to the user.");
        /// <summary>The page settings of the page currently being printed.</summary>
        internal static string @PDOCdocumentPageSettingsDescr => GetResourceString("PDOCdocumentPageSettingsDescr", @"The page settings of the page currently being printed.");
        /// <summary>Occurs after the document has been printed.</summary>
        internal static string @PDOCendPrintDescr => GetResourceString("PDOCendPrintDescr", @"Occurs after the document has been printed.");
        /// <summary>Indicates that the graphics origin is located at the user-specified page margins.</summary>
        internal static string @PDOCoriginAtMarginsDescr => GetResourceString("PDOCoriginAtMarginsDescr", @"Indicates that the graphics origin is located at the user-specified page margins.");
        /// <summary>Retrieves the print controller for this document.</summary>
        internal static string @PDOCprintControllerDescr => GetResourceString("PDOCprintControllerDescr", @"Retrieves the print controller for this document.");
        /// <summary>Occurs once for each page to be printed.</summary>
        internal static string @PDOCprintPageDescr => GetResourceString("PDOCprintPageDescr", @"Occurs once for each page to be printed.");
        /// <summary>Retrieves the settings for the printer the document is currently being printed to.</summary>
        internal static string @PDOCprinterSettingsDescr => GetResourceString("PDOCprinterSettingsDescr", @"Retrieves the settings for the printer the document is currently being printed to.");
        /// <summary>Occurs before each page is printed.  Useful for changing PageSettings for a particular page.</summary>
        internal static string @PDOCqueryPageSettingsDescr => GetResourceString("PDOCqueryPageSettingsDescr", @"Occurs before each page is printed.  Useful for changing PageSettings for a particular page.");
        /// <summary>System.Drawing is not supported on this platform.</summary>
        internal static string @PlatformNotSupported_Drawing => GetResourceString("PlatformNotSupported_Drawing", @"System.Drawing is not supported on this platform.");
        /// <summary>System.Drawing.Common is not supported on non-Windows platforms. See https://aka.ms/systemdrawingnonwindows for more information.</summary>
        internal static string @PlatformNotSupported_Unix => GetResourceString("PlatformNotSupported_Unix", @"System.Drawing.Common is not supported on non-Windows platforms. See https://aka.ms/systemdrawingnonwindows for more information.");
        /// <summary>Defines an object that sends output to a printer.</summary>
        internal static string @PrintDocumentDesc => GetResourceString("PrintDocumentDesc", @"Defines an object that sends output to a printer.");
        /// <summary>XML is not valid.</summary>
        internal static string @PrintingPermissionBadXml => GetResourceString("PrintingPermissionBadXml", @"XML is not valid.");
        /// <summary>Permission level must be between PrintingPermissionLevel.NoPrinting and PrintingPermissionLevel.AllPrinting.</summary>
        internal static string @PrintingPermissionAttributeInvalidPermissionLevel => GetResourceString("PrintingPermissionAttributeInvalidPermissionLevel", @"Permission level must be between PrintingPermissionLevel.NoPrinting and PrintingPermissionLevel.AllPrinting.");
        /// <summary>IDictionary parameter contains at least one entry that is not valid. Ensure all values are consistent with the object's properties.</summary>
        internal static string @PropertyValueInvalidEntry => GetResourceString("PropertyValueInvalidEntry", @"IDictionary parameter contains at least one entry that is not valid. Ensure all values are consistent with the object's properties.");
        /// <summary>PaperSize cannot be changed unless the Kind property is set to Custom.</summary>
        internal static string @PSizeNotCustom => GetResourceString("PSizeNotCustom", @"PaperSize cannot be changed unless the Kind property is set to Custom.");
        /// <summary>Resource '{1}' cannot be found in class '{0}'.</summary>
        internal static string @ResourceNotFound => GetResourceString("ResourceNotFound", @"Resource '{1}' cannot be found in class '{0}'.");
        /// <summary>Target does not have permission to print.</summary>
        internal static string @TargetNotPrintingPermission => GetResourceString("TargetNotPrintingPermission", @"Target does not have permission to print.");
        /// <summary>Text "{0}" cannot be parsed. The expected text format is "{1}".</summary>
        internal static string @TextParseFailedFormat => GetResourceString("TextParseFailedFormat", @"Text ""{0}"" cannot be parsed. The expected text format is ""{1}"".");
        /// <summary>TriState.Default cannot be converted into a Boolean.</summary>
        internal static string @TriStateCompareError => GetResourceString("TriStateCompareError", @"TriState.Default cannot be converted into a Boolean.");
        /// <summary>(Icon)</summary>
        internal static string @toStringIcon => GetResourceString("toStringIcon", @"(Icon)");
        /// <summary>(none)</summary>
        internal static string @toStringNone => GetResourceString("toStringNone", @"(none)");
        /// <summary>GetObjectType on this dc returned an invalid value.</summary>
        internal static string @DCTypeInvalid => GetResourceString("DCTypeInvalid", @"GetObjectType on this dc returned an invalid value.");
        /// <summary>The value of argument '{0}' ({1}) is invalid for Enum type '{2}'.</summary>
        internal static string @InvalidEnumArgument => GetResourceString("InvalidEnumArgument", @"The value of argument '{0}' ({1}) is invalid for Enum type '{2}'.");
        /// <summary>{0} is not a valid value for {1}.</summary>
        internal static string @ConvertInvalidPrimitive => GetResourceString("ConvertInvalidPrimitive", @"{0} is not a valid value for {1}.");
        /// <summary>Invalid Blend object. It should have at least 2 elements in each of the factors and positions arrays.</summary>
        internal static string @BlendObjectMustHaveTwoElements => GetResourceString("BlendObjectMustHaveTwoElements", @"Invalid Blend object. It should have at least 2 elements in each of the factors and positions arrays.");
        /// <summary>Invalid Blend object. The positions array must have 0.0 as its first element.</summary>
        internal static string @BlendObjectFirstElementInvalid => GetResourceString("BlendObjectFirstElementInvalid", @"Invalid Blend object. The positions array must have 0.0 as its first element.");
        /// <summary>Invalid Blend object. The positions array must have 1.0 as its last element.</summary>
        internal static string @BlendObjectLastElementInvalid => GetResourceString("BlendObjectLastElementInvalid", @"Invalid Blend object. The positions array must have 1.0 as its last element.");
        /// <summary>Unable to load DLL '{0}': The specified module could not be found.</summary>
        internal static string @DllNotFoundExceptionMessage => GetResourceString("DllNotFoundExceptionMessage", @"Unable to load DLL '{0}': The specified module could not be found.");
        /// <summary>Unable to find an entry point named '{0}' in DLL '{1}'.</summary>
        internal static string @EntryPointNotFoundExceptionMessage => GetResourceString("EntryPointNotFoundExceptionMessage", @"Unable to find an entry point named '{0}' in DLL '{1}'.");
        /// <summary>{0} only available on WMF files.</summary>
        internal static string @AvailableOnlyOnWMF => GetResourceString("AvailableOnlyOnWMF", @"{0} only available on WMF files.");
        /// <summary>Cannot create Graphics from an indexed bitmap.</summary>
        internal static string @CannotCreateGraphics => GetResourceString("CannotCreateGraphics", @"Cannot create Graphics from an indexed bitmap.");
        /// <summary>Could not open display (X-Server required. Check your DISPLAY environment variable)</summary>
        internal static string @CouldNotOpenDisplay => GetResourceString("CouldNotOpenDisplay", @"Could not open display (X-Server required. Check your DISPLAY environment variable)");
        /// <summary>Couldn't find specified file.</summary>
        internal static string @CouldntFindSpecifiedFile => GetResourceString("CouldntFindSpecifiedFile", @"Couldn't find specified file.");
        /// <summary>Icon instance was disposed.</summary>
        internal static string @IconInstanceWasDisposed => GetResourceString("IconInstanceWasDisposed", @"Icon instance was disposed.");
        /// <summary>Invalid GraphicsUnit</summary>
        internal static string @InvalidGraphicsUnit => GetResourceString("InvalidGraphicsUnit", @"Invalid GraphicsUnit");
        /// <summary>Invalid thumbnail size</summary>
        internal static string @InvalidThumbnailSize => GetResourceString("InvalidThumbnailSize", @"Invalid thumbnail size");
        /// <summary>No codec available for format:{0}</summary>
        internal static string @NoCodecAvailableForFormat => GetResourceString("NoCodecAvailableForFormat", @"No codec available for format:{0}");
        /// <summary>Operation not implemented under X11</summary>
        internal static string @NotImplementedUnderX11 => GetResourceString("NotImplementedUnderX11", @"Operation not implemented under X11");
        /// <summary>(none)</summary>
        internal static string @none => GetResourceString("none", @"(none)");
        /// <summary>No valid icon image found</summary>
        internal static string @NoValidIconImageFound => GetResourceString("NoValidIconImageFound", @"No valid icon image found");
        /// <summary>Null or empty path.</summary>
        internal static string @NullOrEmptyPath => GetResourceString("NullOrEmptyPath", @"Null or empty path.");
        /// <summary>Invalid parameter passed. Number of points and types must be same.</summary>
        internal static string @NumberOfPointsAndTypesMustBeSame => GetResourceString("NumberOfPointsAndTypesMustBeSame", @"Invalid parameter passed. Number of points and types must be same.");
        /// <summary>Object has been disposed.</summary>
        internal static string @ObjectDisposed => GetResourceString("ObjectDisposed", @"Object has been disposed.");
        /// <summary>The value of the {0} property is less than zero.</summary>
        internal static string @ValueLessThenZero => GetResourceString("ValueLessThenZero", @"The value of the {0} property is less than zero.");
        /// <summary>The value of the {0} property is not one of the {1} values</summary>
        internal static string @ValueNotOneOfValues => GetResourceString("ValueNotOneOfValues", @"The value of the {0} property is not one of the {1} values");
        /// <summary>The directory {0} of the filename {1} does not exist.</summary>
        internal static string @TargetDirectoryDoesNotExist => GetResourceString("TargetDirectoryDoesNotExist", @"The directory {0} of the filename {1} does not exist.");
        /// <summary>System.Drawing.Common is not supported on this platform.</summary>
        internal static string @SystemDrawingCommon_PlatformNotSupported => GetResourceString("SystemDrawingCommon_PlatformNotSupported", @"System.Drawing.Common is not supported on this platform.");

    }
}
